---
 
- hosts: localhost
  connection: local
  become: true
  
  vars:
    username: pki
    ansible_user: velociraptor
    base_pkgs:
        - btop
        - tldr
        - htop
        - net-tools
        - whois
        - zsh
        - git
        - git-lfs
        - git-extras
        - colorize
        - docker
        - docker-compose
        - feh
        - software-properties-common
        - stow
        - clamav
        - mlocate
        - apcalc
        - vlan
        - linux-generic
        - portaudio19-dev
        - virt-manager
        - nmap
        - terminator
        - npm
        - cargo
    desktop_pkgs:
        - kde-spectacle
        - cmatrix
    developer_pkgs:
        - awscli
        
  tasks:

    - name: Install base packages
      apt:
        name: "{{ base_pkgs }}"
        state: present
        update_cache: no 
    - name: Install desktop packages
      apt:
        name: "{{ desktop_pkgs }}"
        state: present
        update_cache: no 
    - name: Install developer packages
      apt:
        name: "{{ developer_pkgs }}"
        state: present
        update_cache: no
    - name: add ansible user
      user:
        name: velociraptor
        system: yes

    - name: set up sudo for ansible user
      copy:
        src: files/sudoer_{{ ansible_user }}
        dest: /etc/sudoers.d/{{ ansible_user }}
        owner: root
        group: root
        mode: 0440

    - name: "set up sudo for {{ username }}"
      copy:
        src: files/sudoer_{{ username }}
        dest: /etc/sudoers.d/{{ username }}
        owner: root
        group: root
        mode: 0440

    - name: add ansible-pull cron job
      cron:
        name: ansible auto-provision
        user: "{{ ansible_user }}"
        minute: "*/10"
        job: ansible-pull -o -U https://github.com/fredrik-hansen/ansible.git 

    - name: Change shell to bash 
      become: yes
      command: "chsh -s /bin/bash {{ username }}"

    - name: Set perms of file pkexec
      file:
        path: /usr/bin/pkexec
        state: file
        owner: root 
        group: root
        mode: 0755
    
    - name: add user to docker group
      become: yes
      command: "usermod -aG docker {{ username }}"

        #    - name: Add neovim repository into sources list
        #      ansible.builtin.apt_repository:
        #       repo: ppa:neovim-ppa/stable
        #        state: present
    - name: add nvim apt repository
      apt_repository: 
        repo: 'deb http://ppa.launchpad.net/neovim-ppa/stable/ubuntu focal main' 
        state: present 
        filename: neovim-ppa-ubuntu-stable-focal 
        update_cache: no 


    - name: Install the latest neovim
      apt:
        name: neovim
        update_cache: no

    - name: Disable hibernating
      become: yes                                                                                    
      command: "systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target"

    - name: Set timezone to Europe/Madrid
      become: yes
      command: "timedatectl set-timezone Europe/Madrid"

# Many provisioning systems, especially for Ubuntu, will include cloud-init
# as part of the initial setup process for networking and other configuration.
#

    - name: check if /etc/cloud is present
      #      when: deepops_disable_cloud_init.exists
      stat:
        path: "/etc/cloud"
      register: etc_cloud

    - name: disable generator for setting cloud-init target
      when: etc_cloud.stat.exists
      file:
        path: "/etc/cloud/cloud-init.disabled"
        owner: "root"
        group: "root"
        mode: "0644"
        state: "touch"

    - name: disable all systemd services
      when: etc_cloud.stat.exists 
      ignore_errors: yes
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items:
      - "cloud-init"
      - "cloud-config"
      - "cloud-final"

    - name: Setup zsh from repo
      become: yes
      become_user: "{{ username }}"
      block:
        - name: Clone machfiles repo
          ignore_errors: yes
          git:
            repo: "https://github.com/fredrik-hansen/machfiles.git"
            dest: "~{{ username }}/Machfiles"
        - name: Setup zsh 
          ignore_errors: yes
          command: "chdir=~{{ username }}/Machfiles stow zsh"

    - name: Global zprofile
      become: yes
      copy:
        src: files/zprofile
        dest: /etc/zsh/zprofile
        owner: root
        group: root
        mode: 0640

    - name: Global alias
      become: yes
      copy:
        src: files/aliases
        dest: "~{{ username }}/.bash_aliases"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0660

    - name: Install a common bashrc
      become: yes
      copy:
        src: files/bashrc
        dest: "~{{ username }}/.bashrc"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0600

    - name: Install bash_prompt
      become: yes
      copy:
        src: files/.bash_prompt
        dest: "~{{ username }}/.bash_prompt"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0600


    - name: Setup git config
      become: yes
      copy:
        src: files/.gitconfig
        dest: "~{{ username }}/"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0600

